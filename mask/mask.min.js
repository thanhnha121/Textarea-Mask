!function (b, f) { if ("function" == typeof define && define.amd) define(["exports", "module"], f); else if ("undefined" != typeof exports && "undefined" != typeof module) f(exports, module); else { var g = { exports: {} }; f(g.exports, g), b.autosize = g.exports } }(this, function (b, f) { "use strict"; function g(x) { function y() { var I = window.getComputedStyle(x, null); "vertical" === I.resize ? x.style.resize = "none" : "both" === I.resize && (x.style.resize = "horizontal"), D = "content-box" === I.boxSizing ? -(parseFloat(I.paddingTop) + parseFloat(I.paddingBottom)) : parseFloat(I.borderTopWidth) + parseFloat(I.borderBottomWidth), isNaN(D) && (D = 0), C() } function z(I) { var J = x.style.width; x.style.width = "0px", x.offsetWidth, x.style.width = J, x.style.overflowY = I } function A(I) { for (var J = []; I && I.parentNode && I.parentNode instanceof Element;)I.parentNode.scrollTop && J.push({ node: I.parentNode, scrollTop: I.parentNode.scrollTop }), I = I.parentNode; return J } function B() { var I = x.style.height, J = A(x), K = document.documentElement && document.documentElement.scrollTop; x.style.height = "auto"; var L = x.scrollHeight + D; return 0 === x.scrollHeight ? void (x.style.height = I) : (x.style.height = L + "px", E = x.clientWidth, J.forEach(function (M) { M.node.scrollTop = M.scrollTop }), void (K && (document.documentElement.scrollTop = K))) } function C() { B(); var I = Math.round(parseFloat(x.style.height)), J = window.getComputedStyle(x, null), K = Math.round(parseFloat(J.height)); if (K === I ? "hidden" !== J.overflowY && (z("hidden"), B(), K = Math.round(parseFloat(window.getComputedStyle(x, null).height))) : "visible" !== J.overflowY && (z("visible"), B(), K = Math.round(parseFloat(window.getComputedStyle(x, null).height))), F !== K) { F = K; var L = v("autosize:resized"); try { x.dispatchEvent(L) } catch (M) { } } } if (x && x.nodeName && "TEXTAREA" === x.nodeName && !q.has(x)) { var D = null, E = x.clientWidth, F = null, G = function () { x.clientWidth !== E && C() }, H = function (I) { window.removeEventListener("resize", G, !1), x.removeEventListener("input", C, !1), x.removeEventListener("keyup", C, !1), x.removeEventListener("autosize:destroy", H, !1), x.removeEventListener("autosize:update", C, !1), Object.keys(I).forEach(function (J) { x.style[J] = I[J] }), q.delete(x) }.bind(x, { height: x.style.height, resize: x.style.resize, overflowY: x.style.overflowY, overflowX: x.style.overflowX, wordWrap: x.style.wordWrap }); x.addEventListener("autosize:destroy", H, !1), "onpropertychange" in x && "oninput" in x && x.addEventListener("keyup", C, !1), window.addEventListener("resize", G, !1), x.addEventListener("input", C, !1), x.addEventListener("autosize:update", C, !1), x.style.overflowX = "hidden", x.style.wordWrap = "break-word", q.set(x, { destroy: H, update: C }), y() } } function h(x) { var y = q.get(x); y && y.destroy() } function m(x) { var y = q.get(x); y && y.update() } var q = "function" == typeof Map ? new Map : function () { var x = [], y = []; return { has: function (z) { return -1 < x.indexOf(z) }, get: function (z) { return y[x.indexOf(z)] }, set: function (z, A) { -1 === x.indexOf(z) && (x.push(z), y.push(A)) }, delete: function (z) { var A = x.indexOf(z); -1 < A && (x.splice(A, 1), y.splice(A, 1)) } } }(), v = function (x) { return new Event(x, { bubbles: !0 }) }; try { new Event("test") } catch (x) { v = function (y) { var z = document.createEvent("Event"); return z.initEvent(y, !0, !1), z } } var w = null; "undefined" == typeof window || "function" != typeof window.getComputedStyle ? (w = function (x) { return x }, w.destroy = function (x) { return x }, w.update = function (x) { return x }) : (w = function (x, y) { return x && Array.prototype.forEach.call(x.length ? x : [x], function (z) { return g(z, y) }), x }, w.destroy = function (x) { return x && Array.prototype.forEach.call(x.length ? x : [x], h), x }, w.update = function (x) { return x && Array.prototype.forEach.call(x.length ? x : [x], m), x }), f.exports = w }), jQuery.fn.caret = function (b) { var f = this[0], g = f && "true" === f.contentEditable; if (0 != arguments.length) return f && (-1 == b && (b = this[g ? "text" : "val"]().length), window.getSelection ? g ? (f.focus(), window.getSelection().collapse(f.firstChild, b)) : f.setSelectionRange(b, b) : document.body.createTextRange && (g ? ((q = document.body.createTextRange()).moveToElementText(f), q.moveStart("character", b), q.collapse(!0), q.select()) : ((q = f.createTextRange()).move("character", b), q.select())), g || f.focus()), this; if (f) { if (window.getSelection) return g ? (f.focus(), (m = (h = window.getSelection().getRangeAt(0)).cloneRange()).selectNodeContents(f), m.setEnd(h.endContainer, h.endOffset), m.toString().length) : f.selectionStart; if (document.selection) { if (f.focus(), g) { var h = document.selection.createRange(); return (m = document.body.createTextRange()).moveToElementText(f), m.setEndPoint("EndToEnd", h), m.text.length } b = 0; var m, q = f.createTextRange(), v = (m = document.selection.createRange().duplicate()).getBookmark(); for (q.moveToBookmark(v); 0 !== q.moveStart("character", -1);)b++; return b } if (f.selectionStart) return f.selectionStart } }; var pattern1SU = /\{\{[\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\}\}/g, pattern1U = /\{\{[\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\}\}/g, pattern1S = /\{\{[\w\s]+\}\}/g, pattern1 = /\{\{[\w]+\}\}/g, pattern2SU = /\[\[[\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\]\]/g, pattern2U = /\[\[[\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\]\]/g, pattern2S = /\[\[[\w\s]+\]\]/g, pattern2 = /\[\[[\w]+\]\]/g, pattern4SU = /\(\([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\)\)/g, pattern4U = /\(\([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+\)\)/g, pattern4S = /\(\([\w\s]+\)\)/g, pattern4 = /\(\([\w]+\)\)/g, maskMatchL1SU = /\{\{([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\}).)*$/g, maskMatchL1U = /\{\{([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\}).)*$/g, maskMatchL1S = /\{\{([\w\s]+)?((?!\}).)*$/g, maskMatchL1 = /\{\{([\w]+)?((?!\}).)*$/g, maskMatchL2SU = /\[\[([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\]).)*$/g, maskMatchL2U = /\[\[([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\]).)*$/g, maskMatchL2S = /\[\[([\w\s]+)?((?!\]).)*$/g, maskMatchL2 = /\[\[([\w]+)?((?!\]).)*$/g, maskMatchL4SU = /\(\(([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\)).)*$/g, maskMatchL4U = /\(\(([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?((?!\)).)*$/g, maskMatchL4S = /\(\(([\w\s]+)?((?!\)).)*$/g, maskMatchL4 = /\(\(([\w]+)?((?!\)).)*$/g, maskMatchR1SU = /^((?!\{))([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\}\}/g, maskMatchR1U = /^((?!\{))([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\}\}/g, maskMatchR1S = /^((?!\{))([\w\s]+)?\}\}/g, maskMatchR1 = /^((?!\{))([\w\s]+)?\}\}/g, maskMatchR2SU = /^((?!\[))([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\]\]/g, maskMatchR2U = /^((?!\[))([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\]\]/g, maskMatchR2S = /^((?!\[))([\w\s]+)?\]\]/g, maskMatchR2 = /^((?!\[))([\w\s]+)?\]\]/g, maskMatchR4SU = /^((?!\())([\w\sẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\)\)/g, maskMatchR4U = /^((?!\())([\wẮẰẲẴẶĂẤẦẨẪẬÂÁÀÃẢẠĐẾỀỂỄỆÊÉÈẺẼẸÍÌỈĨỊỐỒỔỖỘÔỚỜỞỠỢƠÓÒÕỎỌỨỪỬỮỰƯÚÙỦŨỤÝỲỶỸỴắằẳẵặăấầẩẫậâáàãảạđếềểễệêéèẻẽẹíìỉĩịốồổỗộôớờởỡợơóòõỏọứừửữựưúùủũụýỳỷỹỵ]+)?\)\)/g, maskMatchR4S = /^((?!\())([\w\s]+)?\)\)/g, maskMatchR4 = /^((?!\())([\w\s]+)?\)\)/g; function setSelectionRange(b, f, g) { if (b.setSelectionRange) b.focus(), b.setSelectionRange(f, g); else if (b.createTextRange) { var h = b.createTextRange(); h.collapse(!0), h.moveEnd("character", g), h.moveStart("character", f), h.select() } } function setCaretToPos(b, f) { setSelectionRange(b, f, f) } $(document).ready(function () { initMask($("#mask"), ["animal", "color", "bike", "cat", "dog", "car", "school", "name", "staff", "art", "whatever"]), initMask($("#mask2"), ["animal", "color", "bike", "cat", "dog", "car", "school", "name", "staff", "art", "whatever"]) }); function initMask(b, f = void 0, g = void 0) {
  if (void 0 === b || null === b) return void console.log("Selector was not undefined!"); if (null === f || void 0 === f) return void console.log("Tag Array Required!"); g === void 0 || null === g ? g = { patern: "{}", unicode: !1, color: "steelblue" } : g.patern === void 0 || null === g.patern || "string" != typeof g.append ? g.patern = "{}" : g.unicode === void 0 || null === g.unicode || "boolean" != typeof g.append ? g.unicode = !1 : (g.color === void 0 || null === g.color || "string" != typeof g.append) && (g.color = "steelblue"), b.attr({ style: "position: relative; display: inline-block;" }), b.find("textarea").attr({ style: "position: relative; z-index: 1; border-radius: 5px; caret-color: red; overflow: hidden; resize: none; outline: none; border: 1px solid rgba(0,0,0,.2); color: transparent; background: transparent; font-family: inherit; line-height: 1.5; padding: 5px;" }), autosize(b.find("textarea")), b.append(`
      <div class="content-mask" style="color: #fff; border-radius: 20px; padding-bottom: 2px; box-shadow: 1px 1px 5px rgba(0,0,0,.2);"></div>
    `), b.find(".content-mask").attr({ style: "position: absolute; top: 0; left: 0; right: 0; bottom: 0; height: auto; z-index: 0; border: 1px solid transparent; border-radius: 5px; font-family: inherit; line-height: 1.5; padding: 5px; word-break: break-word; white-space: pre-wrap;" }), buildMaskArray(b, g, f); var h = configMask(b, g); maskActionCatching(b, g, h)
} function buildMaskArray(b, f, g) {
  var h = f && f.color ? f.color : "#906d60", m = f && f.patern ? f.patern : "{}"; b.append(`
      <div class="mask-array" style="position: absolute; padding: 10px; border: 1px solid rgba(0,0,0,.2); background: #fff; box-shadow: 2px 2px 10px rgba(0, 0, 0, .1); display: none; z-index: 1;"><ul style="list-style: none; padding: 0; margin: 0; max-height: 300px; min-width: 180px; overflow: auto;"></ul></div>
    `), g && g.forEach(q => {
      b.find(".mask-array ul").append(`
          <li onclick="maskArrayItemClick('`+ m.charAt(0) + m.charAt(0) + q + m.charAt(1) + m.charAt(1) + `')" 
            onmouseover="liMaskItemHover(this)"
            onmouseleave="liMaskItemMouseLeave(this)"
            style="margin: 0; height: 20px; padding: 5px; cursor: pointer;"><span style="background: `+ h + `; color: #fff; border-radius: 20px; padding: 0px 3px 2px 3px; box-shadow: 1px 1px 5px rgba(0,0,0,.2);">` + m.charAt(0) + m.charAt(0) + " " + q + " " + m.charAt(1) + m.charAt(1) + `</span>
          </li>
        `)
    })
} function liMaskItemHover(b) { b.style.background = "#eee" } function liMaskItemMouseLeave(b) { b.style.background = "#fff" } function configMask(b, f) { var g = f && f.width ? f.width : 300, h = f && f.height ? f.height : 110, m = f && f.fontSize ? f.fontSize : "15"; b.find("textarea").css("min-width", g + "px"), b.find("textarea").css("min-height", h + "px"), b.find("textarea").css("font-size", m + "px"), b.find(".content-mask").css("font-size", m + "px"); var q; switch (f.patern) { case "{}": switch (f.unicode) { case !0: switch (f.spacing) { case !0: q = pattern1SU, f.maskMatchL = maskMatchL1SU, f.maskMatchR = maskMatchR1SU; break; case !1: q = pattern1S, f.maskMatchL = maskMatchL1S, f.maskMatchR = maskMatchR1S; break; default: q = pattern1SU, f.maskMatchL = maskMatchL1SU, f.maskMatchR = maskMatchR1SU; }case !1: switch (f.spacing) { case !0: q = pattern1U, f.maskMatchL = maskMatchL1U, f.maskMatchR = maskMatchR1U; break; case !1: q = pattern1, f.maskMatchL = maskMatchL1, f.maskMatchR = maskMatchR1; break; default: q = pattern1U, f.maskMatchL = maskMatchL1U, f.maskMatchR = maskMatchR1U; } }break; case "[]": switch (f.unicode) { case !0: switch (f.spacing) { case !0: q = pattern2SU, f.maskMatchL = maskMatchL2SU, f.maskMatchR = maskMatchR2SU; break; case !1: q = pattern2S, f.maskMatchL = maskMatchL2S, f.maskMatchR = maskMatchR2S; break; default: q = pattern2SU, f.maskMatchL = maskMatchL2SU, f.maskMatchR = maskMatchR2SU; }case !1: switch (f.spacing) { case !0: q = pattern2U, f.maskMatchL = maskMatchL2U, f.maskMatchR = maskMatchR2U; break; case !1: q = pattern2, f.maskMatchL = maskMatchL2, f.maskMatchR = maskMatchR2; break; default: q = pattern2U, f.maskMatchL = maskMatchL2U, f.maskMatchR = maskMatchR2U; } }break; case "()": switch (f.unicode) { case !0: switch (f.spacing) { case !0: q = pattern4SU, f.maskMatchL = maskMatchL4SU, f.maskMatchR = maskMatchR4SU; break; case !1: q = pattern4S, f.maskMatchL = maskMatchL4S, f.maskMatchR = maskMatchR4S; break; default: q = pattern4SU, f.maskMatchL = maskMatchL4SU, f.maskMatchR = maskMatchR4SU; }case !1: switch (f.spacing) { case !0: q = pattern4U, f.maskMatchL = maskMatchL4U, f.maskMatchR = maskMatchR4U; break; case !1: q = pattern4, f.maskMatchL = maskMatchL4, f.maskMatchR = maskMatchR4; break; default: q = pattern4U, f.maskMatchL = maskMatchL4U, f.maskMatchR = maskMatchR4U; } }break; default: console.log("Not supported patern, must be {} / [] / ()"); }return q } function maskActionCatching(b, f, g) { b.keydown(function (h) { 27 === h.which ? b.find(".mask-array").hide() : maskEventHandler(b, f, h, g), curMask = b }).click(function (h) { maskEventHandler(b, f, h, g), curMask = b }) } function maskEventHandler(b, f, g, h) { setTimeout(() => { doMask(b, f, h, g) }, 1) } var maskMatchL, maskMatchR; function doMask(b, f, g, h) { var m = b.find("textarea").val(); if ("" === m) return void b.find(".content-mask").html(m); var q = $(h.target).caret(), v = m.substring(0, q).match(f.maskMatchL), w = m.substring(q, m.length).match(f.maskMatchR); if (v && 0 < v.length && w && 0 < w.length) { for (var x = b.find(".content-mask > span"), y = 0; y < x.length; y++)if (x.eq(y).attr("id").endsWith("-" + (q + w[0].length))) { var z = x.eq(y).position(), A = z.top, B = z.left; b.find(".mask-array").css({ top: A + 25 + "px", left: B + "px" }), curMaskRange = { left: x.eq(y).attr("id").split("-")[2], right: x.eq(y).attr("id").split("-")[3] }, curMaskCursor = q, curMaskConfig = f, b.find(".mask-array").show(), setTimeout(() => { updateMaskDisplayArrayItem() }, 1); break } } else b.find(".mask-array").hide(); m = m.replace(/(?:\r\n|\r|\n)/g, "<br />"); var C = m.match(g); if (!C) b.find(".content-mask").html(m); else { for (var D = 0; D < C.length - 1; D++)for (var E = D + 1; E < C.length; E++)C[D] === C[E] && (C.splice(E, 1), E--); for (var F = f && f.color ? f.color : "#906d60", G = 0; G < C.length; G++)m = m.replaceAllParam(C[G], F); b.find(".content-mask").html(m), b.attr({ "data-marked": C.maskJoin() }) } } Array.prototype.maskJoin = function () { for (var f = "", g = 0; g < this.length; g++)f += this[g].substring(2, this[g].length - 2), g < this.length - 1 && (f += ","); return f }, String.prototype.replaceAllParam = function (b, f) { for (var g = this.split(b), h = "", m = 0; m <= g.length - 2; m++)h += g[m] + `<span style="background: ` + f + `; color: #fff; border-radius: 20px; padding-bottom: 2px; box-shadow: 1px 1px 5px rgba(0,0,0,.2);" id="mask-item-` + extractContent(h + g[m]).length + "-" + (extractContent(h) + extractContent(g[m]) + b).length + `">` + b + `</span>`; return h += g[g.length - 1], h }; function extractContent(b) { var f = document.createElement("div"); return f.innerHTML = b, f.innerText } var curMask, curMaskRange, curMaskCursor, curMaskConfig; function maskArrayItemClick(b) { var f = curMask.find("textarea").val(); f = f.substring(0, curMaskRange.left) + b + f.substring(curMaskRange.right, f.length), curMask.find("textarea").val(f) } function updateMaskDisplayArrayItem() { for (var b = curMask.find("textarea").val(), f = b.substring(curMaskRange.left - 0 + 2, curMaskCursor), g = curMask.find(".mask-array > ul li span"), h = curMaskConfig && curMaskConfig.patern ? curMaskConfig.patern : "{}", m = 0, q = 0; q < g.length; q++)g.eq(q).text().toLowerCase().replace(h.charAt(0) + h.charAt(0), "").replace(h.charAt(1) + h.charAt(1), "").trim().includes(f.toLowerCase()) ? g.eq(q).parent("li").show() : (g.eq(q).parent("li").hide(), m++); m === g.length ? (curMask.find(".mask-array > ul li#empty-li").remove(), curMask.find(".mask-array > ul").append("<li id='empty-li'><i>Empty!</i></li>")) : curMask.find(".mask-array > ul li#empty-li").remove() } function getMaskMarked(b) { return void 0 === b || null === b ? (console.log("Selector was undefined!"), void 0) : b.attr("data-marked").split(",") }